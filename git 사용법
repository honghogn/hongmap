Last login: Mon Jun 28 09:14:39 on ttys000

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
hongjuui-MacBook-Pro:~ 10bt$ cd my-app
hongjuui-MacBook-Pro:my-app 10bt$ cd src
hongjuui-MacBook-Pro:src 10bt$ cd day98_0628
hongjuui-MacBook-Pro:day98_0628 10bt$ git init
Initialized empty Git repository in /Users/10bt/my-app/src/day98_0628/.git/
hongjuui-MacBook-Pro:day98_0628 10bt$ dir
-bash: dir: command not found
hongjuui-MacBook-Pro:day98_0628 10bt$ ls
map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ git add map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ git commit -m "first commit"
[master (root-commit) b57b272] first commit
 1 file changed, 27 insertions(+)
 create mode 100644 map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ git commit -m "맵 메서드 사용법"
On branch master
nothing to commit, working tree clean
hongjuui-MacBook-Pro:day98_0628 10bt$ git init
Reinitialized existing Git repository in /Users/10bt/my-app/src/day98_0628/.git/
hongjuui-MacBook-Pro:day98_0628 10bt$ ls
map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ git add map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ git commit -m "맵 메서드 사용법"
On branch master
nothing to commit, working tree clean
hongjuui-MacBook-Pro:day98_0628 10bt$ git commit -m "first commit"
On branch master
nothing to commit, working tree clean
hongjuui-MacBook-Pro:day98_0628 10bt$ git init
Reinitialized existing Git repository in /Users/10bt/my-app/src/day98_0628/.git/
hongjuui-MacBook-Pro:day98_0628 10bt$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
hongjuui-MacBook-Pro:day98_0628 10bt$ restore
-bash: restore: command not found
hongjuui-MacBook-Pro:day98_0628 10bt$ git restore
fatal: you must specify path(s) to restore
hongjuui-MacBook-Pro:day98_0628 10bt$ restore map.html
-bash: restore: command not found
hongjuui-MacBook-Pro:day98_0628 10bt$ git restore map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ config --global user.name "hhjj1350@gmail.com"
-bash: config: command not found
hongjuui-MacBook-Pro:day98_0628 10bt$ git init
Reinitialized existing Git repository in /Users/10bt/my-app/src/day98_0628/.git/
hongjuui-MacBook-Pro:day98_0628 10bt$ ls
map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ git add map.html
hongjuui-MacBook-Pro:day98_0628 10bt$ git commit -m "맵 메서드 사용법"
On branch master
nothing to commit, working tree clean
hongjuui-MacBook-Pro:day98_0628 10bt$ git commit -m "first commit"
On branch master
nothing to commit, working tree clean
hongjuui-MacBook-Pro:day98_0628 10bt$ git -h
unknown option: -h
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
hongjuui-MacBook-Pro:day98_0628 10bt$ git path
git: 'path' is not a git command. See 'git --help'.

The most similar command is
	stash
hongjuui-MacBook-Pro:day98_0628 10bt$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
hongjuui-MacBook-Pro:day98_0628 10bt$ git log
commit b57b2720d0d044cee12f613a03d63cfd65331b13 (HEAD -> master)
Author: homgie <84121863+honghogn@users.noreply.github.com>
Date:   Mon Jun 28 10:00:45 2021 +0900

    first commit
hongjuui-MacBook-Pro:day98_0628 10bt$ git branch -M main
hongjuui-MacBook-Pro:day98_0628 10bt$ git remote add origin https://github.com/honghogn/hongmap.git
hongjuui-MacBook-Pro:day98_0628 10bt$ git push -u origin main
Username for 'https://github.com': honghogn/hongmap.git
Password for 'https://honghogn/hongmap.git@github.com':
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/honghogn/hongmap.git/'
hongjuui-MacBook-Pro:day98_0628 10bt$ git remote add origin https://github.com/honghogn/hongmap.git
fatal: remote origin already exists.
hongjuui-MacBook-Pro:day98_0628 10bt$ git push -u origin main
Username for 'https://github.com': honghogn/hongmap.git
Password for 'https://honghogn/hongmap.git@github.com':
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/honghogn/hongmap.git/'
hongjuui-MacBook-Pro:day98_0628 10bt$ mnmnmnmnmn22
-bash: mnmnmnmnmn22: command not found
hongjuui-MacBook-Pro:day98_0628 10bt$ git push -u origin main
Username for 'https://github.com': honghogn/hongmap.git
Password for 'https://honghogn/hongmap.git@github.com':
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/honghogn/hongmap.git/'
hongjuui-MacBook-Pro:day98_0628 10bt$ git push -u origin main
Username for 'https://github.com': honghogn
Password for 'https://honghogn@github.com':
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 623 bytes | 623.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/honghogn/hongmap.git
 * [new branch]      main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.
hongjuui-MacBook-Pro:day98_0628 10bt$ git push
Everything up-to-date
hongjuui-MacBook-Pro:day98_0628 10bt$ git push -u origin main
Branch 'main' set up to track remote branch 'main' from 'origin'.
Everything up-to-date
hongjuui-MacBook-Pro:day98_0628 10bt$
